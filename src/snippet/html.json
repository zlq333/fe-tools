{
  "fe-segment组件": {
    "prefix": "fe-segment",
    "scope": "vue",
    "description": "fe-segment组件",
    "body": [
      "<fe-segment",
      "  title=\"${1}\"",
      "  headerType=\"inline\"",
      ">",
      "  <fe-segment-item :items=\"${2}\" />",
      "</fe-segment>"
    ]
  },
  "fe-table组件": {
    "prefix": "fe-table",
    "scope": "vue",
    "description": "fe-table组件",
    "body": [
      "<fe-table",
      "  border",
      "  :tableData=\"tableUse.data\"",
      "  :columns=\"tableColumns\"",
      "  :show-pagination=\"true\"",
      "  :pagination-config=\"tableUse.pagination\"",
      "  @pagination-current-change=\"tableUse.pageCurrentChange\"",
      "  @pagination-size-change=\"tableUse.pageSizeChange\"",
      "  row-class-name=\"pointer\"",
      ">",
      "</fe-table>"
    ]
  },
  "fe-upload组件": {
    "prefix": "fe-upload",
    "scope": "vue",
    "description": "fe-upload组件",
    "body": [
      "<fe-upload",
      "  ref=\"UploadRef\"",
      "  :action=\"uploadAction\"",
      "  :limit=\"1\"",
      "  :maxSize=\"20\"",
      "  :defaultFiles=\"defaultFiles\"",
      "/>"
    ]
  },
  "vue初始化模板": {
    "prefix": "vue-template",
    "scope": "vue",
    "description": "vue初始化模板",
    "body": [
      "<template>",
      "  <div class=\"content-page\"></div>",
      "</template>",
      "",
      "<script lang=\"ts\" setup>",
      "import { ref, reactive } from 'vue';",
      "import { useRouter, useRoute } from 'vue-router';",
      "import { useStore } from 'vuex';",
      "import api from '@/api/api';",
      "import { thousands, valueToLabel } from '@fe/filter';",
      "import { ElMessage } from 'element-plus';",
      "import { XHR } from '@/utils/XHR';",
      "import { getStorage, arrayGive } from '@fe/utils';",
      "import { getStorage } from '@fe/utils';",
      "</script>",
      "<style lang=\"postcss\"></style>",
      ""
    ]
  },
  "valueToLabel": {
    "prefix": "vtl",
    "scope": "vue",
    "description": "valueToLabel",
    "body": [
      "<template #prop=\"{ scope }\">",
      "  <span>{{ valueToLabel(scope.row.${1:prop}, list) }}</span>",
      "</template>"
    ]
  }
}
