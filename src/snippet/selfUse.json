{
  "uniapp页面模板": {
    "prefix": "uniapp",
    "scope": "vue",
    "description": "uniapp页面模板",
    "body": [
      "<template>\r",
      "  <view class=\"page-wrap\"></view>\r",
      "</template>\r",
      "\r",
      "<script setup lang=\"ts\">\r",
      "import { ref } from \"vue\";\r",
      "import { onLoad, onShow } from \"@dcloudio/uni-app\";\r",
      "\r",
      "onLoad(() => {\r",
      "  console.log(\"page Load\");\r",
      "});\r",
      "onShow(() => {\r",
      "  console.log(\"page Show\");\r",
      "});\r",
      "</script>\r",
      "\r",
      "<style lang=\"postcss\"></style>"
    ]
  },
  "商品表单模板": {
    "prefix": "goodsForm",
    "scope": "vue",
    "description": "商品表单模板",
    "body": [
      "<template>\r",
      "  <div class=\"\">\r",
      "    <el-form ref=\"formDataRef\" :model=\"formData\" :rules=\"formRules\" label-width=\"120px\" class=\"demo-ruleForm\">\r",
      "      <el-form-item label=\"商品编号\" prop=\"goodsNo\" v-if=\"pageType === 'EDIT'\">\r",
      "        <el-input v-model=\"formData.goodsNo\" disabled style=\"width: 300px\"></el-input>\r",
      "      </el-form-item>\r",
      "      <el-form-item label=\"商品名称\" prop=\"goodsName\">\r",
      "        <el-input\r",
      "          v-model.trim=\"formData.goodsName\"\r",
      "          :maxlength=\"20\"\r",
      "          placeholder=\"请输入\"\r",
      "          style=\"width: 300px\"\r",
      "        ></el-input>\r",
      "      </el-form-item>\r",
      "      <el-form-item label=\"商品类型\" prop=\"goodsTypeValue\">\r",
      "        <el-select v-model=\"formData.goodsTypeValue\" placeholder=\"请选择\" clearable filterable>\r",
      "          <el-option\r",
      "            v-for=\"(el, idx) in goodsTypArr\"\r",
      "            :key=\"idx\"\r",
      "            :value=\"el.goodsTypeValue\"\r",
      "            :label=\"el.goodsTypeName\"\r",
      "          ></el-option>\r",
      "        </el-select>\r",
      "      </el-form-item>\r",
      "      <el-form-item label=\"商品规格\" prop=\"goodsModel\">\r",
      "        <el-input\r",
      "          v-model.trim=\"formData.goodsModel\"\r",
      "          :maxlength=\"20\"\r",
      "          placeholder=\"请输入\"\r",
      "          style=\"width: 300px\"\r",
      "        ></el-input>\r",
      "        <!-- <el-select\r",
      "          v-model=\"formData.goodsModel\"\r",
      "          :disabled=\"!formData.goodsTypeValue\"\r",
      "          placeholder=\"请选择\"\r",
      "          clearable\r",
      "          filterable\r",
      "        >\r",
      "          <el-option\r",
      "            v-for=\"(el, idx) in goodsModelArr\"\r",
      "            :key=\"idx\"\r",
      "            :value=\"el.goodsModelValue\"\r",
      "            :label=\"el.goodsModelValue\"\r",
      "          ></el-option>\r",
      "        </el-select> -->\r",
      "      </el-form-item>\r",
      "      <el-form-item label=\"计量单位\" prop=\"measuringUnit\">\r",
      "        <el-select v-model=\"formData.measuringUnit\" placeholder=\"请选择\" clearable filterable>\r",
      "          <el-option v-for=\"item in unitArr\" :key=\"item.value\" :value=\"item.value\" :label=\"item.label\"></el-option>\r",
      "        </el-select>\r",
      "      </el-form-item>\r",
      "      <el-form-item label=\"创建人\" prop=\"createMan\" v-if=\"pageType === 'EDIT'\">\r",
      "        <el-input v-model=\"formData.createMan\" disabled style=\"width: 300px\"></el-input>\r",
      "      </el-form-item>\r",
      "      <el-form-item label=\"创建时间\" prop=\"createTime\" v-if=\"pageType === 'EDIT'\">\r",
      "        <el-input v-model=\"formData.createTime\" disabled style=\"width: 300px\"></el-input>\r",
      "      </el-form-item>\r",
      "\r",
      "      <el-form-item>\r",
      "        <el-button type=\"primary\" @click=\"handleSave\">保存</el-button>\r",
      "        <el-button @click=\"onGoBack\">返回</el-button>\r",
      "      </el-form-item>\r",
      "    </el-form>\r",
      "  </div>\r",
      "</template>\r",
      "\r",
      "<script lang=\"ts\" setup>\r",
      "import { ref, reactive, nextTick } from 'vue';\r",
      "import { useRouter, useRoute } from 'vue-router';\r",
      "import { useStore } from 'vuex';\r",
      "import api from '@/api/api';\r",
      "import { XHR } from '@/utils/XHR';\r",
      "import { ElMessage } from 'element-plus';\r",
      "import { isNumberValid } from '@fe/form-valid';\r",
      "import { allGive } from '@fe/utils';\r",
      "import useSubmitForm from '@/use/useForm';\r",
      "import { getDict } from '@/utils/utils';\r",
      "\r",
      "const router = useRouter();\r",
      "const route = useRoute();\r",
      "const store = useStore();\r",
      "\r",
      "const props = defineProps({\r",
      "  pageType: {\r",
      "    type: String, // ADD、EDIT、DETAIL\r",
      "    default: 'ADD'\r",
      "  }\r",
      "});\r",
      "\r",
      "// 录入form\r",
      "const { formDataRef, formData, formRules, handleSubmit } = useSubmitForm({\r",
      "  data: {\r",
      "    goodsModel: '',\r",
      "    goodsName: '',\r",
      "    goodsTypeValue: '',\r",
      "    measuringUnit: '',\r",
      "    id: '',\r",
      "    // 展示字段\r",
      "    goodsNo: '',\r",
      "    createMan: '',\r",
      "    createTime: ''\r",
      "  },\r",
      "  rules: {\r",
      "    goodsName: [{ required: true, message: '请输入商品名称', trigger: 'blur' }],\r",
      "    goodsTypeValue: [{ required: true, message: '请选择商品类型', trigger: 'change' }],\r",
      "    goodsModel: [{ required: true, message: '请选择商品规格', trigger: 'change' }],\r",
      "    measuringUnit: [{ required: true, message: '请选择计量单位', trigger: 'change' }]\r",
      "  }\r",
      "});\r",
      "const handleSave = () => {\r",
      "  handleSubmit(checkFormCallback);\r",
      "};\r",
      "const checkFormCallback = async () => {\r",
      "  const path = props.pageType === 'ADD' ? api.goodsAdd : api.goodsUpdate;\r",
      "  // 兼容在进入编辑页面获取详情失败的场景\r",
      "  if (props.pageType === 'EDIT' && !formData.value) {\r",
      "    formData.value.id = route.params.id;\r",
      "  }\r",
      "  await XHR.post(path, formData.value);\r",
      "  ElMessage.success('操作成功');\r",
      "  router.push('/goods/list');\r",
      "};\r",
      "const onGoBack = () => router.go(-1);\r",
      "const fillPage = async () => {\r",
      "  // 获取详情\r",
      "  const res = await XHR.post(api.goodsDetail, { id: route.params.id });\r",
      "\r",
      "  allGive(formData.value, res);\r",
      "};\r",
      "\r",
      "const goodsTypArr: any = ref([]);\r",
      "const getGoodsType = async () => {\r",
      "  const res = await XHR.post(api.goodsType);\r",
      "  goodsTypArr.value = res || [];\r",
      "};\r",
      "\r",
      "//  获取字典\r",
      "const unitArr = ref<Dict[]>([]); // 计量单位\r",
      "const onSetItemDict = async () => {\r",
      "  unitArr.value = await getDict('my_measuring_unit');\r",
      "};\r",
      "\r",
      "const initPage = async () => {\r",
      "  // 获取计量单位\r",
      "  onSetItemDict();\r",
      "  // 获取商品类型\r",
      "  await getGoodsType();\r",
      "  // if (props.pageType === 'ADD') {\r",
      "  // }\r",
      "  if (props.pageType === 'EDIT') {\r",
      "    // 数据回填\r",
      "    fillPage();\r",
      "  }\r",
      "};\r",
      "\r",
      "/**===========init page============**/\r",
      "initPage();\r",
      "</script>\r",
      "\r",
      "<style scoped></style>\r"
    ]
  },
  "商品编辑模板": {
    "prefix": "goodsEdit",
    "scope": "vue",
    "description": "商品编辑模板",
    "body": [
      "<template>\r",
      "  <div class=\"\">\r",
      "    <goods-form pageType=\"EDIT\"></goods-form>\r",
      "  </div>\r",
      "</template>\r",
      "\r",
      "<script lang=\"ts\" setup>\r",
      "import { ref, reactive, nextTick } from 'vue';\r",
      "import { useRouter, useRoute } from 'vue-router';\r",
      "import { useStore } from 'vuex';\r",
      "import api from '@/api/api';\r",
      "import { XHR } from '@/utils/XHR';\r",
      "import { ElMessage } from 'element-plus';\r",
      "import { isNumberValid } from '@fe/form-valid';\r",
      "import { allGive } from '@fe/utils';\r",
      "import GoodsForm from './GoodsForm.vue';\r",
      "\r",
      "const router = useRouter();\r",
      "const route = useRoute();\r",
      "const store = useStore();\r",
      "const setBreadcrumb = (breadcrumb: any[]) => {\r",
      "  store.dispatch('setBreadcrumb', breadcrumb);\r",
      "};\r",
      "const initPage = () => {\r",
      "  setBreadcrumb([{ title: '商品管理' }, { title: '商品列表', path: '/goods/list' }, { title: route.meta.title }]);\r",
      "};\r",
      "\r",
      "/**===========init page============**/\r",
      "initPage();\r",
      "</script>\r",
      "\r",
      "<style scoped></style>\r"
    ]
  },
  "商品详情模板": {
    "prefix": "goodsDetail",
    "scope": "vue",
    "description": "商品详情模板",
    "body": [
      "<template>\r",
      "  <div class=\"\">\r",
      "    <el-descriptions title=\"商品信息\" border size=\"large\">\r",
      "      <el-descriptions-item v-for=\"(item, index) in descriptions\" :label=\"item.label\" :key=\"index\">\r",
      "        {{ goodsInfo[item.value] }}\r",
      "      </el-descriptions-item>\r",
      "    </el-descriptions>\r",
      "\r",
      "    <el-button class=\"mt-20\" @click=\"onGoBack\">返回</el-button>\r",
      "  </div>\r",
      "</template>\r",
      "\r",
      "<script lang=\"ts\" setup>\r",
      "import { ref, reactive, nextTick } from 'vue';\r",
      "import { useRouter, useRoute } from 'vue-router';\r",
      "import { useStore } from 'vuex';\r",
      "import api from '@/api/api';\r",
      "import { XHR } from '@/utils/XHR';\r",
      "import { ElMessage } from 'element-plus';\r",
      "import { isNumberValid } from '@fe/form-valid';\r",
      "import { allGive } from '@fe/utils';\r",
      "\r",
      "const router = useRouter();\r",
      "const route = useRoute();\r",
      "const store = useStore();\r",
      "\r",
      "// 设置面包屑\r",
      "const setBreadcrumb = (breadcrumb: any[]) => {\r",
      "  store.dispatch('setBreadcrumb', breadcrumb);\r",
      "};\r",
      "\r",
      "const id = ref(route.params.id);\r",
      "const goodsInfo = reactive({\r",
      "  goodsNo: '',\r",
      "  goodsName: '',\r",
      "  goodsTypeName: '',\r",
      "  goodsModel: '',\r",
      "  measuringUnit: '',\r",
      "  createMan: '',\r",
      "  createTime: ''\r",
      "});\r",
      "const descriptions = ref([\r",
      "  { label: '商品编号', value: 'goodsNo' },\r",
      "  { label: '商品名称', value: 'goodsName' },\r",
      "  { label: '商品类型', value: 'goodsTypeName' },\r",
      "  { label: '商品规格', value: 'goodsModel' },\r",
      "  { label: '计量单位', value: 'measuringUnit' },\r",
      "  { label: '创建人', value: 'createMan' },\r",
      "  { label: '创建时间', value: 'createTime' }\r",
      "]);\r",
      "const getGoodsInfo = async () => {\r",
      "  const res = await XHR.post(api.goodsDetail, { id: id.value });\r",
      "  console.log(res, 'getGoodsInfo');\r",
      "  allGive(goodsInfo, res);\r",
      "};\r",
      "const initPage = () => {\r",
      "  setBreadcrumb([{ title: '商品管理' }, { title: '商品列表', path: '/goods/list' }, { title: route.meta.title }]);\r",
      "  getGoodsInfo();\r",
      "};\r",
      "const onGoBack = () => router.go(-1);\r",
      "\r",
      "/**===========init page============**/\r",
      "initPage();\r",
      "</script>\r",
      "\r",
      "<style lang=\"postcss\" scoped>\r",
      ":deep(.el-descriptions__label) {\r",
      "  width: 120px;\r",
      "}\r",
      "</style>\r"
    ]
  },
  "商品新增模板": {
    "prefix": "goodsAddd",
    "scope": "vue",
    "description": "商品新增模板",
    "body": [
      "<template>\r",
      "  <div class=\"\">\r",
      "    <goods-form pageType=\"ADD\"></goods-form>\r",
      "  </div>\r",
      "</template>\r",
      "\r",
      "<script lang=\"ts\" setup>\r",
      "import { ref, reactive, nextTick } from 'vue';\r",
      "import { useRouter, useRoute } from 'vue-router';\r",
      "import { useStore } from 'vuex';\r",
      "import api from '@/api/api';\r",
      "import { XHR } from '@/utils/XHR';\r",
      "import { ElMessage } from 'element-plus';\r",
      "import { isNumberValid } from '@fe/form-valid';\r",
      "import { allGive } from '@fe/utils';\r",
      "import GoodsForm from './GoodsForm.vue';\r",
      "\r",
      "const router = useRouter();\r",
      "const route = useRoute();\r",
      "const store = useStore();\r",
      "const setBreadcrumb = (breadcrumb: any[]) => {\r",
      "  store.dispatch('setBreadcrumb', breadcrumb);\r",
      "};\r",
      "const initPage = () => {\r",
      "  setBreadcrumb([{ title: '商品管理' }, { title: '商品列表', path: '/goods/list' }, { title: route.meta.title }]);\r",
      "};\r",
      "\r",
      "/**===========init page============**/\r",
      "initPage();\r",
      "</script>\r",
      "\r",
      "<style scoped></style>\r"
    ]
  }
}
